AppXML

<Application x:Class="Magazin.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Magazin"
             StartupUri="window/Avtorizaciya.xaml">  // пишем путь до окна в папке при смене названия главного окна
    <Application.Resources>
         
    </Application.Resources>
</Application>

==================================================================================================================================================================================================================================================================================================================

Авторизация XML:

<Window x:Class="Magazin.Avtorizaciya"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Magazin"
        mc:Ignorable="d"
        Title="Авторизация" MinHeight="655" MinWidth="500" WindowStartupLocation="CenterScreen" SizeToContent="WidthAndHeight" MaxWidth="600" MaxHeight="755" ResizeMode="NoResize">
    <Grid>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBox x:Name="textBoxLogin" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="250" Margin="0,0,0,25" FontFamily="Comic Sans MS" FontSize="20"/>
            <PasswordBox x:Name="textBoxPassword" HorizontalAlignment="Left" VerticalAlignment="Top" Height="35" Width="250" Margin="0,0,0,25" FontSize="20"/>
            <StackPanel x:Name="stackpanelCapcha" Orientation="Horizontal" Visibility="Hidden">
                <TextBox x:Name="capchaBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120" Margin="0,0,0,0" FontFamily="Comic Sans MS" FontSize="20"/>
                <TextBox x:Name="gencapchaBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120" Margin="10,0,0,0" FontFamily="Comic Sans MS" FontSize="20" IsReadOnly="True"/>
            </StackPanel>
            <Button x:Name="buttonVxod" Content="Вход" HorizontalAlignment="Left" Margin="72,24.7,0,0" VerticalAlignment="Center" Width="105" Height="32" Background="#FF498C00" FontFamily="Comic Sans MS" FontSize="20" Click="buttonVoxd_Click" Foreground="Black"/>
        </StackPanel>
        <Border BorderBrush="#FF76E383" BorderThickness="1" Height="73" Background="#FF76E383" VerticalAlignment="Top">
            <Image Source="/Photo/logo.png" Margin="407,1,-1,-1" />
        </Border>
        <Label Content="Логин" HorizontalAlignment="Left" Margin="38,206,0,0" VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20"/>
        <Label Content="Пароль" HorizontalAlignment="Left" Margin="38,265,0,0" VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20"/>
        <Label x:Name="labelCapcha" Content="Капча" HorizontalAlignment="Left" Margin="38,324,0,0" VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Visibility="Hidden"/>
        <Button x:Name="capchaRefreshButton" Content="֍" HorizontalAlignment="Left" Margin="390,323,0,0" VerticalAlignment="Top" Width="35" Height="35" FontFamily="Comic Sans MS" FontSize="20" Background="#FF498C51" Click="capchaRefreshButton_Click" Visibility="Hidden" />
        <Label x:Name="labelSeconds" Content="10" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Visibility="Hidden" FontFamily="Comic Sans MS" FontSize="20"/>
    </Grid>
</Window>

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Авторизация CS:

1. таймер



using System.Windows.Threading; // таймер пишем в using

namespace Magazin
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class Avtorizaciya : Window
    {
        public DispatcherTimer timer = new DispatcherTimer(); // таймер
        public Avtorizaciya()
        {
            InitializeComponent();
            timer.Interval = new TimeSpan(0, 0, 1);
            timer.Tick += capchatimer;
        }
        int intrerv = 10; // сколько секунд будет идти таймер 
        public void capchatimer(object sender, EventArgs e)
        {
            intrerv--;
            if (intrerv == 0)
            {
                timer.Stop();
                intrerv = 10;
                buttonVoxd.IsEnabled = true;                        // кнопка после 10 секунд  активна 
                labelSeconds.Visibility = Visibility.Hidden;        // лейбел с секундами скрыт
                CaptchaGenerator();
            }
            labelSeconds.Content = Convert.ToString(intrerv); // показывает сколько секунд заблокированна кнопка 
        }



2.кнопка обновления 

        private void capchaRefreshButton_Click(object sender, RoutedEventArgs e)
        {
            CaptchaGenerator();
        }





3. кнопка входа и проверка логина и пароля  || ПОДУМАЙ НАД РОЛЯМИ !!!!

        private void buttonVxod_Click(object sender, RoutedEventArgs e)     // кнопка ввхода 

        {
            string login = "admin";                                                                
            string password = "admin";
            StringBuilder errors = new StringBuilder();
            if (textBoxLogin.Text == "")
                errors.AppendLine("логин пустой");
            if (textBoxPassword.Password == "")
                errors.AppendLine("пароль пустой");  
            if (capchaBox.Text!= gencapchaBox.Text && stackpanelCapcha.Visibility == Visibility.Visible)
                errors.AppendLine("капча введена неверно");
            if (textBoxLogin.Text != login)
                errors.AppendLine("логин введен неверно");
            if (textBoxPassword.Password!=password)
                errors.AppendLine("пароль введен неверно");
            if (errors.Length > 0)                                                              
            {
                if (stackpanelCapcha.Visibility==Visibility.Visible && capchaBox.Text != gencapchaBox.Text)
                {
                    timer.Start();
                    buttonVoxd.IsEnabled = false;
                    labelSeconds.Visibility = Visibility.Visible;
                }
                else
                {
                    stackpanelCapcha.Visibility = Visibility.Visible;
                    labelCapcha.Visibility = Visibility.Visible;
                    capchaRefreshButton.Visibility = Visibility.Visible;
                    CaptchaGenerator();
                }
                MessageBox.Show(errors.ToString());
                return;
            }
            else
            {
                ProductWindow pr = new ProductWindow();
                pr.Show();
                this.Close();

            }


        }




3. генерация капчи 

        void CaptchaGenerator()  // метод генерации капчи 
        {
            char[] chars = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789".ToCharArray();
            string randomString = "";
            Random ran = new Random();
            for (int i = 0; i < 5; i++)
            {
                randomString += chars[ran.Next(0, chars.Length)];
            }
            gencapchaBox.Text = randomString;
        }




    }
}



===============================================================================================================================================================================================

entityfraemfork


1. Context.cs



 private static TradeEntities5 _context;



 public static TradeEntities5 GetContext()
        {
            if (_context == null)
                _context = new TradeEntities5();
            return _context;
        }



======================================================================================================================================================================================================================




НЕ ЗАБУДЬ ПОМЕНЯТЬ МЕСТАМИ СТОЛБЦЫ В DATA GRID !!!!!!!!!!



Продукты XML:



<Window x:Class="Magazin.ProductWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Magazin"
        mc:Ignorable="d"
        Title="Продукты" MinHeight="1080" MinWidth="1920" WindowStartupLocation="CenterScreen" SizeToContent="WidthAndHeight" MaxWidth="1920" MaxHeight="1080">
    <Grid>
        <Border BorderBrush="#FF76E383" BorderThickness="1" Height="100" Background="#FF76E383" VerticalAlignment="Top">
            <Image Source="/Photo/logo.png" Margin="1817,1,-1,-1" />
        </Border>
        <DataGrid x:Name="Dtproduct" HorizontalAlignment="Left" Height="842" Margin="0,100,0,0" VerticalAlignment="Top" Width="1912" FontSize="20" FontFamily="Comic Sans MS" AutoGenerateColumns="False" IsReadOnly="True">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Фото" Width="200">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Width="200" Source="{Binding ProductPhoto}" Stretch="Fill" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn  Header="Артикуль" Binding="{Binding ProductArticleNumber}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Имя продукта" Binding="{Binding ProductName}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Описание" Binding="{Binding ProductDescription}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Категория" Binding="{Binding Category.CategoryName}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Производитель" Binding="{Binding Manufacturer.ManufacturerName}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Цена" Binding="{Binding ProductCost}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Макс. скидка" Binding="{Binding ProductDiscountAmount}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Действующая скидка" Binding="{Binding ProductCurrentDiscount}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Шт. на складе" Binding="{Binding ProductQuantityInStock}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Статус" Binding="{Binding Status.StatusName}" Width="*">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

            </DataGrid.Columns>

        </DataGrid>
        <Button x:Name="buttonBack" Content="Назад" HorizontalAlignment="Left" Margin="10,976,0,0" VerticalAlignment="Top" Width="163" Height="40" Background="#FF498C00" FontFamily="Comic Sans MS" FontSize="20" Click="buttonBack_Click" />
        <Button x:Name="buttonReload" Content="обновить" HorizontalAlignment="Left" Margin="1100,976,0,0" VerticalAlignment="Top" Width="163" Height="40" Background="#FF498C00" FontFamily="Comic Sans MS" FontSize="20" Click="buttonReload_Click"/>
        <Button x:Name="buttonAdd" Content="добавить" HorizontalAlignment="Left" Margin="1400,976,0,0" VerticalAlignment="Top" Width="163" Height="40" Background="#FF498C00" FontFamily="Comic Sans MS" FontSize="20" Click="buttonAdd_Click"/>
        <Button x:Name="buttonDeleted" Content="удалить" HorizontalAlignment="Left" Margin="1700,976,0,0" VerticalAlignment="Top" Width="163" Height="40" Background="#FF498C00" FontFamily="Comic Sans MS" FontSize="20" Click="buttonDeleted_Click"/>
    </Grid>
</Window>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

СДЕЛАЙ КОСТЫЛЬ НА КНОПКУ РЕДАКТИРОВАТЬ

 Продукты CS: 



namespace Magazin
{
    /// <summary>
    /// Логика взаимодействия для Product.xaml
    /// </summary>
    public partial class ProductWindow : Window
    {
        public ProductWindow()
        {
            InitializeComponent();
        }


1. кнопка удаления

     
        private void buttonDeleted_Click(object sender, RoutedEventArgs e)
        {
            var productForRemoving = Dtproduct.SelectedItems.Cast<Product>().ToList();                                      // если не работает удаление в sql поменять отношения на каскадные
            if (MessageBox.Show($"Вы точно хотите удалить следующие {productForRemoving.Count()} элементов?", "Внимание",
                MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
            {
                try
                {
                    TradeEntities5.GetContext().Product.RemoveRange(productForRemoving);
                    TradeEntities5.GetContext().SaveChanges();
                    MessageBox.Show("Данные удалены!");
                    Dtproduct.ItemsSource = TradeEntities5.GetContext().Product.ToList();

                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message.ToString());
                }
            }
        }


2. кнопка добавления


        private void buttonAdd_Click(object sender, RoutedEventArgs e)
        {
            WindowAdd add = new WindowAdd(null); 
            add.ShowDialog();
        }


3. кнопка обновления


        private void buttonReload_Click(object sender, RoutedEventArgs e)
        {
            TradeEntities5.GetContext().ChangeTracker.Entries().ToList().ForEach(p => p.Reload());
            Dtproduct.ItemsSource = TradeEntities5.GetContext().Product.ToList();
        }

4. кнопка назад

        private void buttonBack_Click(object sender, RoutedEventArgs e)
        {
            Avtorizaciya vxod = new Avtorizaciya();
            vxod.Show();
            this.Close();
        }

        
    }
}



=================================================================================================================================================================================================================================================================================================

ПОМЕНЯТЬ ТОЖЕ МЕСТАМИ КАК В ДАТА ГРИДЕ !!!!!!!!!!!!

Код для окна добавления XML:


<Window x:Class="Magazin.WindowAdd"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Magazin"
        mc:Ignorable="d"
        Title="WindowAdd" Height="850" Width="700" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Grid>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBox x:Name="photoBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductPhoto}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="articulBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductArticleNumber}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="nameBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductName}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="descriptionBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductDescription}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="categoryBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding Category.CategoryID}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="manufacturerBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding Manufacturer.ManufacturerName}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="costBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductCost}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="discountAmountBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductDiscountAmount}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="currentDiscountBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductCurrentDiscount}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="quantityInStockBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding ProductQuantityInStock}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <TextBox x:Name="statusBox" HorizontalAlignment="Left" Height="35"  TextWrapping="Wrap" Text="{Binding Status.StatusName}" VerticalAlignment="Top" Width="250" Margin="0,0,0,10" FontFamily="Comic Sans MS" FontSize="20"/>
            <Button x:Name="buttonSave" Content="Сохранить" HorizontalAlignment="Left" Margin="0,50,0,0" VerticalAlignment="Top" Width="250" Background="#FF498C00" FontFamily="Comic Sans MS" FontSize="20" Height="50" Click="buttonSave_Click" />
            <Button x:Name="buttonBack" Content="Отмена" HorizontalAlignment="Left" Margin="0,10,0,0" VerticalAlignment="Top" Width="250" Height="50" Background="#FF498C00" FontFamily="Comic Sans MS" FontSize="20" Click="buttonBack_Click" />
        </StackPanel>
        <Border BorderBrush="#FF76E383" BorderThickness="1" HorizontalAlignment="Left" Height="75" VerticalAlignment="Top" Width="694"  Background="#FF76E383" >
            <Image Source="/Photo/logo.png" Margin="585,0,0,0" />
        </Border>
        <Label Content="категория" HorizontalAlignment="Left" Margin="117,261,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="Описание" HorizontalAlignment="Left" Margin="115,216,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="36"/>
        <Label Content="наименование" HorizontalAlignment="Left" Margin="75,171,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="Артикуль" HorizontalAlignment="Left" Margin="121,126,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="Фото" HorizontalAlignment="Left" Margin="165,81,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="Производитель" HorizontalAlignment="Left" Margin="59,307,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="34"/>
        <Label Content="Цена" HorizontalAlignment="Left" Margin="163,351,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="Макс. скидка" HorizontalAlignment="Left" Margin="87,396,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="действующая скидка" HorizontalAlignment="Left" Margin="11,441,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="шт. на складе" HorizontalAlignment="Left" Margin="81,486,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
        <Label Content="Статус" HorizontalAlignment="Left" Margin="149,531,0,0"  VerticalAlignment="Top" FontFamily="Comic Sans MS" FontSize="20" Height="35"/>
    </Grid>
</Window>


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



Добавления cs:



namespace Magazin
{
    /// <summary>
    /// Логика взаимодействия для WindowAdd.xaml
    /// </summary>
    public partial class WindowAdd : Window
    {




        private Product _currentproduct = new Product();
        public WindowAdd(Product selectedproduct)
        {
            InitializeComponent();
            if (selectedproduct != null)
                _currentproduct = selectedproduct;
            DataContext = _currentproduct;
        }



1.Кнопка назад


        private void buttonBack_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
       

2. кнопка сохранения 


        private void buttonSave_Click(object sender, RoutedEventArgs e)
        {
            TradeEntities5.GetContext().Product.Add(_currentproduct);
            TradeEntities5.GetContext().SaveChanges();
            MessageBox.Show("Успешно добавлено");
            this.Close();
        }
    }
}






ДОБАВИТЬ ЮНИТ ТЕСТЫ И БИБЛЕОТЕКУ КЛАССОВ































